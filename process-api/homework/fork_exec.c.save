  GNU nano 2.9.3                     p4.c                                

#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <fcntl.h>
#include <sys/wait.h>

int main(int argc, char *argv[])
{
        int rc = fork();
        if(rc < 0) // fork failed, exit
        {
                fprintf(stderr, "fork failed\n");
                exit(1);
        }
        else if(rc == 0) // child: redirect standard output to a file
        {
                close(STDOUT_FILENO);
                open("./p4.output", O_CREAT | O_WRONLY | O_TRUNC, S_IRWX$

                // now exec "wc"...
                char *myargs[3];
                myargs[0] = strdup("wc"); // program: "wc" (word count)
                myargs[1] = strdup("p4.c"); // argument: file to count
                myargs[2] = NULL; // marks end of array
                execvp(myargs[0], myargs); // runs word count
        }
        else // parent goes down with this path (main)
        {
                int rc_wait = wait(NULL);
        }
                          [ 33 Zeilen gelesen ]
^G Hilfe      ^O Speichern  ^W Wo ist     ^K Ausschneide^J Ausrichten
^X Beenden    ^R Datei Ã¶ffne^\ Ersetzen   ^U Ausschn. r ^T Rechtschr.
